#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

#define FLAME_SENSOR_PIN A0
#define SOIL_MOISTURE_PIN A1
#define RAIN_SENSOR_PIN A2
#define PUMP_RELAY_PIN 8
#define LED_RED_PIN 9
#define LED_GREEN_PIN 10
#define DHT_PIN 2

#define DHTTYPE DHT22

#define FLAME_THRESHOLD 300
#define SOIL_MOISTURE_THRESHOLD 400
#define RAIN_THRESHOLD 300

DHT dht(DHT_PIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(9600);
  pinMode(PUMP_RELAY_PIN, OUTPUT);
  pinMode(LED_RED_PIN, OUTPUT);
  pinMode(LED_GREEN_PIN, OUTPUT);
  digitalWrite(PUMP_RELAY_PIN, LOW);
  digitalWrite(LED_RED_PIN, LOW);
  digitalWrite(LED_GREEN_PIN, HIGH);
  dht.begin();
  lcd.init();
  lcd.backlight();
}

void loop() {
  int flameValue = analogRead(FLAME_SENSOR_PIN);
  int soilMoistureValue = analogRead(SOIL_MOISTURE_PIN);
  int rainValue = analogRead(RAIN_SENSOR_PIN);
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  String pumpStatus;

  if (flameValue < FLAME_THRESHOLD) {
    digitalWrite(PUMP_RELAY_PIN, HIGH);
    digitalWrite(LED_RED_PIN, HIGH);
    digitalWrite(LED_GREEN_PIN, LOW);
    pumpStatus = "Pompa: ON (Api)";
  } else if (soilMoistureValue > SOIL_MOISTURE_THRESHOLD && rainValue > RAIN_THRESHOLD) {
    digitalWrite(PUMP_RELAY_PIN, HIGH);
    digitalWrite(LED_RED_PIN, HIGH);
    digitalWrite(LED_GREEN_PIN, LOW);
    pumpStatus = "Pompa: ON (Kering)";
  } else {
    digitalWrite(PUMP_RELAY_PIN, LOW);
    digitalWrite(LED_RED_PIN, LOW);
    digitalWrite(LED_GREEN_PIN, HIGH);
    pumpStatus = "Pompa: OFF       ";
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("T:");
  lcd.print(temperature, 1);
  lcd.print("C H:");
  lcd.print(humidity, 0);
  lcd.print("%");

  lcd.setCursor(0, 1);
  lcd.print(pumpStatus);

  delay(2000);
}
